%earlyheader {
}

%header {
}

%auxil "FILE* "

%source {
  // begin strnlen copied from packcc.c source file, as a workaround for TinyCC
  #ifdef __TINYC__
  static size_t strnlen(const char *str, size_t maxlen) {
    size_t i;
    for( i = 0; (i < maxlen) && str[i]; i++ ) {
    };
    return i;
  }
  #endif
  // end strnlen

  /// Begin PCC_GETCHAR override
  #define PCC_GETCHAR(auxil) (auxil ? fgetc(auxil) : EOF)
  // End PCC_GETCHAR override
}

grammar <-
  _ parse /
  _ enum /
  _ eof

parse <- 'parse' _ '=' _ 'eof' _ ';'

_ <- (' ' / [\r] / [\n] / [\r\n] / [\t])*
eof <- !.

%%

FILE* grammar = NULL;

int main( int argc, char* argv[] ) {
  if( argc != 2 ) {
    exit(1);
  }

  grammar = fopen(argv[1], "r");
  if( grammar == NULL ) {
    exit(1);
  }

  pcc_context_t *ctx = pcc_create(grammar);

  while( pcc_parse(ctx, NULL) ) {
  };

  pcc_destroy( ctx );

  fclose( grammar );
  grammar = NULL;

  return 0;
}

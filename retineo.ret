program Retineo

/*
 * Executable meta data
 */
  versioninfo
    companyName 'Retineo'
    fileVersionString '0.01'

    fileVersion 0.01.0.0
    productVersion 0.01.0.0
    fileFlagsMask 0
    fileFlags 0
    fileOS VOS_WINDOWS32
    fileType VFT_APP
    FileSubtype 0
  end

/*
 *  Base types
 */

  type int:8 int8 = 0
  type int:16 int16 = 0
  type int:32 int32 = 0
  type int:64 int64 = 0

  type uint:8 uint8 = 0
  type uint:16 uint16 = 0
  type uint:32 uint32 = 0
  type uint:64 uint64 = 0

  type uint32 usize = 0
  type uint64 ufsize = 0

  type uint:1 bool = 0

/*
 *  Constants
 */

  const
    @null = @0

    bool false = 0
    bool true = 1
  end

/*
 *  Call convention specifications
 */

  callspec default
    paramOrder leftToRight
    paramAlign sizeof(uint) / 8
    stackCleanup callee

    prologue
      push    ebp
      mov     ebp, esp
    end

    epilogue
      mov     esp, ebp
      pop     ebp
    end
  end

  callspec cdecl inherits default
    paramOrder rightToLeft
    stackCleanup caller
  end

  callspec stdcall inherits default
    paramOrder rightToLeft
    stackCleanup callee
  end

  callspec WINAPI inherits stdcall
  end

/*
 *  Windows declarations
 */

  import func ExitProcess( uint uExitCode )
    from 'kernel32.dll'

  type uint UINT
  type usize SIZE_T

  const
    UINT LHND = 0x0042
    UINT LMEM_FIXED = 0x0000
    UINT LMEM_MOVEABLE = 0x0002
    UINT LMEM_ZEROINIT = 0x0040
    UINT LPTR = 0x0040
    UINT NONZEROLHND = LMEM_MOVEABLE
    UINT NONZEROLPTR = LMEM_FIXED
  end

  import func stdcall @ LocalAlloc( UINT uFlags, SIZE_T uBytes )
    from 'kernel32.dll'

/*
 *  Memory management
 */

  func @ alloc( usize size )
    return LocalAlloc(LPTR, size)
  end

/*
 *  Base file object
 */
  object file
  end

  interface fileRead implements file
    method ufsize read( @dest, ufsize size )
    method ufsize write( @source, ufsize soze )
  end

  interface fileRead implements file
  end

  interface fileNoRead implements file
  end

  interface fileWrite implements file
  end

  interface fileNoWrite implements file
  end

  abstract file inherits fileRead, fileNoWrite
  end

run
end
